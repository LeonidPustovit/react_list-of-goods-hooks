{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","minLength","visibleGoods","filter","good","length","sort","good1","good2","NONE","ALPABET","localeCompare","LENGTH","Error","reverse","App","useState","isStarted","setIsStarted","setIsReversed","setSortType","setMinLength","className","type","classNames","onClick","current","name","value","onChange","target","hidden","selected","map","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,EACAC,GAGA,IAAMC,EAAe,YAAIJ,GAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASJ,KAsB7D,OApBAC,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKJ,EAASc,KACZ,OAAO,EAET,KAAKd,EAASe,QACZ,OAAOH,EAAMI,cAAcH,GAE7B,KAAKb,EAASiB,OACZ,OAAOL,EAAMF,OAASG,EAAMH,OAE9B,QACE,MAAM,IAAIQ,MAAM,4BAIlBb,GACFE,EAAaY,UAGRZ,G,SAnCJP,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAMoB,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOhB,EAAP,KAAmBmB,EAAnB,KACA,EAAgCH,mBAASrB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBqB,EAAjB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOf,EAAP,KAAkBoB,EAAlB,KA4BA,OACE,qBAAKC,UAAU,MAAf,SAEGL,EAEG,qCACE,sBAAKK,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SACpB,CAAE,YAAazB,IAAaJ,EAASe,UACvCe,QAjCa,WACzBL,EAAYzB,EAASe,UA4BX,iCAQA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SACpB,CAAE,YAAazB,IAAaJ,EAASiB,SACvCa,QArCO,WACnBL,EAAYzB,EAASiB,SAgCX,4BAQA,wBACEW,KAAK,SACLD,UAAWE,IAAW,SAAU,CAAE,YAAaxB,IAC/CyB,QAxCS,WACrBN,GAAc,SAAAO,GAAO,OAAKA,MAoChB,qBAOA,wBACEH,KAAK,SACLD,UAAU,SACVG,QA3CO,WACnBL,EAAYzB,EAASc,MACrBU,GAAc,GACdE,EAAa,IAqCH,sBASF,8BACE,yBACEM,KAAK,SACLL,UAAU,SACVM,MAAO3B,EACP4B,SAAU,SAAAD,GA/CtBP,GA+C+CO,EA/C3BE,OAAOF,QA2CjB,UAME,wBAAQA,MAAM,IAAIG,QAAM,EAACC,UAAQ,EAAjC,oBACA,wBAAQJ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAIJ,oBAAIN,UAAU,QAAd,SACGzB,EACCD,EACAG,EACAC,EACAC,GACAgC,KAAI,SAAA7B,GACJ,OACE,oBAAIkB,UAAU,cAAd,SAA6BlB,YAMrC,qBAAKkB,UAAU,UAAf,SACE,wBACEC,KAAK,SACLD,UAAU,SACVG,QAxGM,WAChBP,GAAa,IAoGL,wBChKZgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.886b1cc9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods].filter(good => good.length > minLength);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.NONE:\n        return 0;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        throw new Error('invalid sorting type');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [minLength, setMinLength] = useState(0);\n\n  const startList = () => {\n    setIsStarted(true);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseSorting = () => {\n    setIsReversed(current => !current);\n  };\n\n  const resetSorting = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n    setMinLength(0);\n  };\n\n  const changeMinLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setMinLength(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n\n      {isStarted\n        ? (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className={classNames('button',\n                  { 'is-active': sortType === SortType.ALPABET })}\n                onClick={sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                className={classNames('button',\n                  { 'is-active': sortType === SortType.LENGTH })}\n                onClick={sortByLength}\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                className={classNames('button', { 'is-active': isReversed })}\n                onClick={reverseSorting}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={resetSorting}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div>\n              <select\n                name=\"select\"\n                className=\"select\"\n                value={minLength}\n                onChange={value => changeMinLength(value)}\n              >\n                <option value=\"0\" hidden selected>select</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n\n            <ul className=\"Goods\">\n              {getReorderedGoods(\n                goodsFromServer,\n                sortType,\n                isReversed,\n                minLength,\n              ).map(good => {\n                return (\n                  <li className=\"Goods__item\">{good}</li>\n                );\n              })}\n            </ul>\n          </>\n        ) : (\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={startList}\n            >\n              Start\n            </button>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}